"""
–í –¥–∞–Ω–Ω–æ–º –º–æ–¥—É–ª–µ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–≤–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ FunPayCardinal'–∞.
"""

import os
from configparser import ConfigParser
import time
import telebot
from colorama import Fore, Style
from Utils.cardinal_tools import validate_proxy, hash_password

# locale#locale#locale
default_config = {
    "FunPay": {
        "golden_key": "",
        "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36",
        "autoRaise": "0",
        "autoResponse": "0",
        "autoDelivery": "0",
        "multiDelivery": "0",
        "autoRestore": "0",
        "autoDisable": "0",
        "oldMsgGetMode": "0",
        "locale": "ru"
    },
    "Telegram": {
        "enabled": "0",
        "token": "",
        "secretKeyHash": "–•–µ—à–°–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ–ü–∞—Ä–æ–ª—è",
        "blockLogin": "0"
    },

    "BlockList": {
        "blockDelivery": "0",
        "blockResponse": "0",
        "blockNewMessageNotification": "0",
        "blockNewOrderNotification": "0",
        "blockCommandNotification": "0"
    },

    "NewMessageView": {
        "includeMyMessages": "1",
        "includeFPMessages": "1",
        "includeBotMessages": "0",
        "notifyOnlyMyMessages": "0",
        "notifyOnlyFPMessages": "0",
        "notifyOnlyBotMessages": "0",
        "showImageName": "1"
    },

    "Greetings": {
        "ignoreSystemMessages": "0",
        "onlyNewChats": "0",
        "sendGreetings": "0",
        "greetingsText": "–ü—Ä–∏–≤–µ—Ç, $chat_name!",
        "greetingsCooldown": "2"
    },

    "OrderConfirm": {
        "watermark": "1",
        "sendReply": "0",
        "replyText": "$username, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ $order_id!\n–ï—Å–ª–∏ –Ω–µ —Å–ª–æ–∂–Ω–æ, –æ—Å—Ç–∞–≤—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∑—ã–≤!"
    },

    "ReviewReply": {
        "star1Reply": "0",
        "star2Reply": "0",
        "star3Reply": "0",
        "star4Reply": "0",
        "star5Reply": "0",
        "star1ReplyText": "",
        "star2ReplyText": "",
        "star3ReplyText": "",
        "star4ReplyText": "",
        "star5ReplyText": "",
    },

    "Proxy": {
        "enable": "0",
        "ip": "",
        "port": "",
        "login": "",
        "password": "",
        "check": "0"
    },

    "Other": {
        "watermark": "üê¶",
        "requestsDelay": "4",
        "language": "ru"
    }
}


def create_configs():
    if not os.path.exists("configs/auto_response.cfg"):
        with open("configs/auto_response.cfg", "w", encoding="utf-8"):
            ...

    if not os.path.exists("configs/auto_response.cfg"):
        with open("configs/auto_delivery.cfg", "w", encoding="utf-8"):
            ...


def create_config_obj(settings) -> ConfigParser:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥–∞ —Å –Ω—É–∂–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.

    :param settings: dict –Ω–∞—Å—Ç—Ä–æ–µ–∫.

    :return: –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥–∞.
    """
    config = ConfigParser(delimiters=(":",), interpolation=None)
    config.optionxform = str
    config.read_dict(settings)
    return config


def contains_russian(text: str) -> bool:
    for char in text:
        if '–ê' <= char <= '—è' or char in '–Å—ë':
            return True
    return False


def first_setup():
    config = create_config_obj(default_config)
    sleep_time = 1

    print(f"{Fore.CYAN}{Style.BRIGHT}–ü—Ä–∏–≤–µ—Ç! {Fore.RED}(`-`)/{Style.RESET_ALL}")
    time.sleep(sleep_time)

    print(f"\n{Fore.CYAN}{Style.BRIGHT}–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥... {Fore.RED}(-_-;). . .{Style.RESET_ALL}")
    time.sleep(sleep_time)

    print(f"\n{Fore.CYAN}{Style.BRIGHT}–î–∞–≤–∞–π –∫–∞ –ø—Ä–æ–≤–µ–¥–µ–º –ø–µ—Ä–≤–∏—á–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É! {Fore.RED}¬∞++¬∞{Style.RESET_ALL}")
    time.sleep(sleep_time)

    while True:
        print(f"\n{Fore.MAGENTA}{Style.BRIGHT}‚îå‚îÄ‚îÄ {Fore.CYAN}"
              f"–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏ —Ç–æ–∫–µ–Ω (golden_key) —Ç–≤–æ–µ–≥–æ FunPay –∞–∫–∫–∞—É–Ω—Ç–∞ (–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏ EditThisCookie) {Fore.RED}(._.){Style.RESET_ALL}")
        golden_key = input(f"{Fore.MAGENTA}{Style.BRIGHT}‚îî‚îÄ‚îÄ‚îÄ> {Style.RESET_ALL}").strip()
        if len(golden_key) != 32:
            print(
                f"\n{Fore.CYAN}{Style.BRIGHT}–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! {Fore.RED}\(!!Àö0Àö)/{Style.RESET_ALL}")
            continue
        config.set("FunPay", "golden_key", golden_key)
        break

    while True:
        print(f"\n{Fore.MAGENTA}{Style.BRIGHT}‚îå‚îÄ‚îÄ {Fore.CYAN}"
              f"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —Ç—ã –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π User-agent (–≤–≤–µ–¥–∏ –≤ Google \"my user agent\"). –ò–ª–∏ –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç—å Enter. "
              f"{Fore.RED}¬Ø\(¬∞_o)/¬Ø{Style.RESET_ALL}")
        user_agent = input(f"{Fore.MAGENTA}{Style.BRIGHT}‚îî‚îÄ‚îÄ‚îÄ> {Style.RESET_ALL}").strip()
        if contains_russian(user_agent):
            print(
                f"\n{Fore.CYAN}{Style.BRIGHT}–¢—ã –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ —Ç–∞–∫–æ–µ Google? {Fore.RED}\(!!Àö0Àö)/{Style.RESET_ALL}")
            continue
        if user_agent:
            config.set("FunPay", "user_agent", user_agent)
        break

    while True:
        print(
            f"\n{Fore.MAGENTA}{Style.BRIGHT}‚îå‚îÄ‚îÄ {Fore.CYAN}–í–≤–µ–¥–∏ API-—Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ —É @BotFather). "
            f"@username –±–æ—Ç–∞ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å \"funpay\". {Fore.RED}(._.){Style.RESET_ALL}")
        token = input(f"{Fore.MAGENTA}{Style.BRIGHT}‚îî‚îÄ‚îÄ‚îÄ> {Style.RESET_ALL}").strip()
        try:
            if not token or not token.split(":")[0].isdigit():
                raise Exception("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞")
            username = telebot.TeleBot(token).get_me().username
            if not username.lower().startswith("funpay"):
                print(
                    f"\n{Fore.CYAN}{Style.BRIGHT}@username –±–æ—Ç–∞ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å \"funpay\"! {Fore.RED}\(!!Àö0Àö)/{Style.RESET_ALL}")
                continue
        except Exception as ex:
            s = ""
            if str(ex):
                s = f" ({str(ex)})"
            print(f"\n{Fore.CYAN}{Style.BRIGHT}–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!{s} {Fore.RED}\(!!Àö0Àö)/{Style.RESET_ALL}")
            continue
        break

    while True:
        print(
            f"\n{Fore.MAGENTA}{Style.BRIGHT}‚îå‚îÄ‚îÄ {Fore.CYAN}–ü—Ä–∏–¥—É–º–∞–π –ø–∞—Ä–æ–ª—å (–µ–≥–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç Telegram-–±–æ—Ç). –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤, –∑–∞–≥–ª–∞–≤–Ω—ã–µ, —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É "
            f" {Fore.RED}·¥ñÃÆ ÃÆ·¥ñ{Style.RESET_ALL}")
        password = input(f"{Fore.MAGENTA}{Style.BRIGHT}‚îî‚îÄ‚îÄ‚îÄ> {Style.RESET_ALL}").strip()
        if len(password) < 8 or password.lower() == password or password.upper() == password or not any(
                [i.isdigit() for i in password]):
            print(
                f"\n{Fore.CYAN}{Style.BRIGHT}–≠—Ç–æ –ø–ª–æ—Ö–æ–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! {Fore.RED}\(!!Àö0Àö)/{Style.RESET_ALL}")
            continue
        break

    config.set("Telegram", "enabled", "1")
    config.set("Telegram", "token", token)
    config.set("Telegram", "secretKeyHash", hash_password(password))

    while True:
        print(f"\n{Fore.MAGENTA}{Style.BRIGHT}‚îå‚îÄ‚îÄ {Fore.CYAN}"
              f"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å IPv4 –ø—Ä–æ–∫—Å–∏ ‚Äì —É–∫–∞–∂–∏ –∏—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ login:password@ip:port –∏–ª–∏ ip:port. –ï—Å–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å, "
              f"—á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ –∏–ª–∏ –æ–Ω–∏ —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω—ã - –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ Enter. "
              f"{Fore.RED}(* ^ œâ ^){Style.RESET_ALL}")
        proxy = input(f"{Fore.MAGENTA}{Style.BRIGHT}‚îî‚îÄ‚îÄ‚îÄ> {Style.RESET_ALL}").strip()
        if proxy:
            try:
                login, password, ip, port = validate_proxy(proxy)
                config.set("Proxy", "enable", "1")
                config.set("Proxy", "check", "1")
                config.set("Proxy", "login", login)
                config.set("Proxy", "password", password)
                config.set("Proxy", "ip", ip)
                config.set("Proxy", "port", port)
                break
            except:
                print(
                    f"\n{Fore.CYAN}{Style.BRIGHT}–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–∫—Å–∏. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! {Fore.RED}(o-_-o){Style.RESET_ALL}")
                continue
        else:
            break

    print(f"\n{Fore.CYAN}{Style.BRIGHT}–ì–æ—Ç–æ–≤–æ! –°–µ–π—á–∞—Å —è —Å–æ—Ö—Ä–∞–Ω—é –∫–æ–Ω—Ñ–∏–≥ –∏ –∑–∞–≤–µ—Ä—à—É –ø—Ä–æ–≥—Ä–∞–º–º—É! "
          f"{Fore.RED} ò> ò{Style.RESET_ALL}")
    print(f"{Fore.CYAN}{Style.BRIGHT}–ó–∞–ø—É—Å—Ç–∏ –º–µ–Ω—è —Å–Ω–æ–≤–∞ –∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–µ–º—É Telegram-–±–æ—Ç—É. "
          f"–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–µ–≥–æ. {Fore.RED} ï‚Ä¢·¥•‚Ä¢ î{Style.RESET_ALL}")
    with open("configs/_main.cfg", "w", encoding="utf-8") as f:
        config.write(f)
    time.sleep(10)
